'use client'
import React from 'react'
import s from './HeroSection.module.css'
import IconHero from '../../icons/IconHero/IconHero'
import GridBackground from '../../GridBackground/GridBackground'
import Link from 'next/link'
import { motion } from 'framer-motion'

type HeroBlock = {
  title?: string
  subtitle?: string
  description?: string
  firstButton?: string
  lastButton?: string
}

export default function HeroSection({ block }: { block: HeroBlock }) {
  const ICON_MAP: Record<string, React.ReactNode> = {
    icon: <IconHero iconClass={s.icon} />,
  }

  const parts = block.title?.split(/(\{icon\}|<br\/?>)/g) || []
  return (
    <div className={s.section} id="main">
      <div className={s.heroWrap}>
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5, ease: 'easeOut' }}
          viewport={{ once: false, amount: 0.2 }}
          className={s.subtitle}
        >
          <span>{block.subtitle}</span>
        </motion.div>
        <motion.h1
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5, ease: 'easeOut', delay: 0.2 }}
          viewport={{ once: false, amount: 0.2 }}
        >
          {parts?.map((part, i) =>
            part === '{icon}' ? (
              <span key={i} style={{ display: 'inline-block', verticalAlign: 'middle' }}>
                {ICON_MAP.icon}
              </span>
            ) : part === '<br/>' || part === '<br>' ? (
              <br key={i} />
            ) : (
              part
            ),
          )}
        </motion.h1>
        <motion.p
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5, ease: 'easeOut', delay: 0.4 }}
          viewport={{ once: false, amount: 0.2 }}
          dangerouslySetInnerHTML={{ __html: block.description || '' }}
        />
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5, ease: 'easeOut', delay: 0.6 }}
          viewport={{ once: false, amount: 0.2 }}
          className={s.wrapButtons}
        >
          <Link className={s.firstButton} href="#strategy">
            <span>
              {iconLast}
              {block.firstButton}
            </span>
          </Link>
          <Link
            className={s.lastButton}
            href="https://calendly.com/pushenko_integrity/30min"
            target="blank"
          >
            <span>
              {iconFirst}
              {block.lastButton}
            </span>
          </Link>
        </motion.div>
      </div>
      <div className={s.iconsAds}>
        <svg
          width="1866"
          height="344"
          viewBox="0 0 1866 344"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          className={s.iconLine}
        >
          <path
            opacity="0.4"
            d="M1.29712 130.614C1.29712 130.614 69.5353 -10.3936 293.297 1.30645C517.059 13.0065 692.5 327.991 997 341.989C1301.5 355.986 1500 125.037 1660 111.037C1820 97.0375 1865 168.037 1865 168.037"
            stroke="url(#paint0_linear_3001_1077)"
          />
          <defs>
            <linearGradient
              id="paint0_linear_3001_1077"
              x1="43"
              y1="0.995871"
              x2="1917"
              y2="183.472"
              gradientUnits="userSpaceOnUse"
            >
              <stop offset="0.015518" stopOpacity="0.2" />
              <stop offset="0.0965764" stopColor="#E4D7F9" />
              <stop offset="0.404553" stopColor="#D6CAEA" stopOpacity="0.95157" />
              <stop offset="0.769516" stopColor="#FFF6AE" />
              <stop offset="0.964975" stopOpacity="0.2" />
            </linearGradient>
          </defs>
        </svg>

        <div className={s.iconsWrapper}>
          <div>{meta}</div>
          <div>{tiktok}</div>
          <div>{googleAds}</div>
          <div>{linkedin}</div>
        </div>
      </div>
      <GridBackground />
    </div>
  )
}

export const iconFirst = (
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20">
    <g clipPath="url(#clip0_1144_893)">
      <path
        d="M7.45669 2.11351C7.14735 1.34013 6.39833 0.833008 5.5654 0.833008H2.76376C1.69797 0.833008 0.833984 1.69681 0.833984 2.76262C0.833984 11.822 8.17811 19.1663 17.2373 19.1663C18.3031 19.1663 19.1668 18.3023 19.1668 17.2364L19.1673 14.4343C19.1673 13.6013 18.6603 12.8524 17.887 12.5431L15.2018 11.4693C14.5071 11.1915 13.7162 11.3165 13.1414 11.7955L12.4484 12.3735C11.639 13.048 10.4482 12.9944 9.70321 12.2494L7.75181 10.2961C7.00685 9.55115 6.9518 8.36123 7.62625 7.55186L8.20413 6.85887C8.68311 6.28408 8.80928 5.4929 8.53141 4.7982L7.45669 2.11351Z"
        strokeWidth="1.66667"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </g>
    <defs>
      <clipPath id="clip0_1144_893">
        <rect width="20" height="20" />
      </clipPath>
    </defs>
  </svg>
)

export const iconLast = (
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M14.9722 0.0656837C14.1681 -9.25951e-06 13.1677 0 11.8917 0H8.10831C6.83229 0 5.83189 -9.25951e-06 5.02785 0.0656837C4.2091 0.132577 3.53273 0.271051 2.92051 0.582986C1.91406 1.09579 1.09579 1.91406 0.582986 2.92051C0.271051 3.53273 0.132577 4.20911 0.0656837 5.02785C-9.25951e-06 5.83189 0 6.83229 0 8.10831V12.0728C0 14.3959 1.88317 16.2791 4.20619 16.2791H4.76596C4.99712 16.2791 5.15519 16.5125 5.06934 16.7272C4.43058 18.3241 6.26967 19.7677 7.66921 18.7681L10.0978 17.0334L10.1435 17.0008C10.803 16.5362 11.5887 16.2843 12.3954 16.2792L12.4515 16.2791H13.0987C14.5392 16.2792 15.418 16.2794 16.1562 16.063C17.9043 15.5504 19.2713 14.1833 19.7839 12.4352C20.0004 11.6971 20.0002 10.8184 20 9.37785V8.10829C20 6.8323 20 5.83188 19.9343 5.02785C19.8674 4.2091 19.7289 3.53273 19.417 2.92051C18.9042 1.91406 18.0859 1.09579 17.0794 0.582986C16.4672 0.271051 15.7909 0.132577 14.9722 0.0656837ZM3.55399 1.82625C3.93671 1.63125 4.40902 1.51624 5.14147 1.4564C5.88206 1.39589 6.82557 1.39535 8.13953 1.39535H11.8605C13.1744 1.39535 14.1179 1.39589 14.8585 1.4564C15.591 1.51624 16.0632 1.63125 16.446 1.82625C17.1899 2.20528 17.7947 2.81009 18.1738 3.55399C18.3687 3.93671 18.4837 4.40902 18.5436 5.14147C18.6041 5.88206 18.6046 6.82557 18.6046 8.13953V9.24111C18.6046 10.8615 18.5976 11.5221 18.4449 12.0426C18.066 13.3347 17.0556 14.3451 15.7635 14.724C15.2431 14.8766 14.5824 14.8837 12.962 14.8837H12.4515L12.3865 14.8838C11.2951 14.8908 10.2319 15.2315 9.33972 15.8602L6.85818 17.6326C6.59264 17.8223 6.24369 17.5484 6.36489 17.2454C6.81736 16.1142 5.98429 14.8837 4.76596 14.8837H4.20619C2.6538 14.8837 1.39535 13.6253 1.39535 12.0728V8.13953C1.39535 6.82557 1.39589 5.88206 1.4564 5.14147C1.51624 4.40902 1.63125 3.93671 1.82625 3.55399C2.20528 2.81009 2.81009 2.20528 3.55399 1.82625Z"
    />
    <path d="M7.20812 8.13922C7.20812 8.65298 6.79164 9.06945 6.27789 9.06945C5.76414 9.06945 5.34766 8.65298 5.34766 8.13922C5.34766 7.62547 5.76414 7.20898 6.27789 7.20898C6.79164 7.20898 7.20812 7.62547 7.20812 8.13922Z" />
    <path d="M10.9308 8.13922C10.9308 8.65298 10.5143 9.06945 10.0005 9.06945C9.48678 9.06945 9.07031 8.65298 9.07031 8.13922C9.07031 7.62547 9.48678 7.20898 10.0005 7.20898C10.5143 7.20898 10.9308 7.62547 10.9308 8.13922Z" />
    <path d="M14.6515 8.13922C14.6515 8.65298 14.235 9.06945 13.7212 9.06945C13.2075 9.06945 12.791 8.65298 12.791 8.13922C12.791 7.62547 13.2075 7.20898 13.7212 7.20898C14.235 7.20898 14.6515 7.62547 14.6515 8.13922Z" />
  </svg>
)

const meta = (
  <svg xmlns="http://www.w3.org/2000/svg" width="86" height="63" viewBox="0 0 86 63" fill="none">
    <path
      d="M84.7531 29.9067C84.6809 27.8516 80.4394 11.2998 70.4488 4.47256C65.4849 0.87067 61.4066 -0.0904114 57.4154 0.39965C53.2032 0.916842 51.0454 2.32183 48.8811 4.14848C44.9555 7.24372 41.0988 14.255 41.0988 14.255C41.0988 14.255 31.4923 3.58261 20.4381 4.93989C6.84518 6.61191 2.29693 23.9716 2.29693 23.9716C2.29693 23.9716 2.29542 23.9759 2.29342 23.9808C2.29287 23.9826 2.29176 23.9855 2.29107 23.9872C2.28876 23.9939 2.28549 24.002 2.28143 24.013C2.28047 24.0156 2.27916 24.0188 2.27827 24.022C2.27378 24.0336 2.26867 24.048 2.26282 24.0637C2.26102 24.0687 2.25923 24.0739 2.25732 24.0791C2.25052 24.0976 2.24312 24.1188 2.23484 24.142C2.23346 24.1459 2.23238 24.149 2.231 24.1528C2.18962 24.2699 2.13055 24.4433 2.05797 24.6697C2.05747 24.6718 2.05681 24.6737 2.05629 24.6757C2.03823 24.7321 2.01942 24.7916 1.99994 24.8546C1.99997 24.8549 1.99961 24.855 1.99964 24.8553C1.58101 26.203 0.826566 29.0302 0.447153 32.9129C0.446652 32.9165 0.446429 32.9205 0.445928 32.9242C0.428599 33.1012 0.412249 33.2804 0.396553 33.4619C0.395665 33.4728 0.394737 33.4834 0.393849 33.4943C0.379797 33.6575 0.366784 33.823 0.354287 33.9895C0.352573 34.0119 0.350618 34.0334 0.348939 34.056L0.3495 34.0559C0.0295581 38.3871 0.207614 43.8599 1.7351 49.9712C3.94052 58.794 10.5091 62.5175 16.9543 62.1284C24.607 62.0126 29.3878 56.2049 32.7223 49.933C35.2711 45.1389 41.7294 28.8901 41.7294 28.8901L41.7296 28.8906C44.6569 32.591 48.2107 37.0716 50.4247 39.8242C52.4628 42.358 55.2776 46.5134 61.5344 51.9374C61.6613 52.0346 61.7886 52.1302 61.9163 52.2245C61.9567 52.2547 61.9974 52.284 62.0379 52.3138C62.1256 52.378 62.2136 52.4421 62.3015 52.5048C62.3494 52.5392 62.3975 52.5729 62.4455 52.6069C62.5278 52.6647 62.6102 52.722 62.6928 52.7789C62.7421 52.8128 62.7912 52.8464 62.8409 52.8798C62.9251 52.9369 63.0099 52.9932 63.0946 53.0487C63.141 53.0794 63.1875 53.1101 63.234 53.1401C63.3352 53.2053 63.4366 53.2694 63.5382 53.3326C63.5682 53.3509 63.5978 53.3702 63.6279 53.3886C63.7583 53.4691 63.8896 53.5473 64.0213 53.624C64.0584 53.6457 64.0959 53.6663 64.1332 53.6879C64.2286 53.7423 64.3245 53.7966 64.4206 53.8495C64.4704 53.8768 64.5206 53.9032 64.5705 53.9301C64.6556 53.9758 64.7409 54.0205 64.8265 54.0646C64.8797 54.0918 64.933 54.119 64.9865 54.1455C65.0713 54.1879 65.1568 54.2295 65.2422 54.2703C65.2947 54.2954 65.347 54.3205 65.3998 54.3447C65.4935 54.3882 65.5877 54.43 65.6821 54.4713C65.7265 54.4907 65.7705 54.5109 65.8148 54.5299C65.9522 54.5885 66.0901 54.6448 66.2293 54.6988C66.2579 54.7099 66.2867 54.7201 66.3155 54.7311C66.4273 54.7734 66.5395 54.8152 66.6526 54.855C66.7048 54.8733 66.7574 54.8902 66.8102 54.908C66.901 54.9386 66.9921 54.9687 67.0838 54.9971C67.1418 55.0153 67.2 55.0327 67.2584 55.0501C67.3469 55.0763 67.4356 55.1014 67.5248 55.1257C67.584 55.1418 67.6432 55.158 67.7027 55.1733C67.7958 55.1971 67.8896 55.2195 67.9838 55.2414C68.0389 55.254 68.0937 55.2675 68.1493 55.2796C68.2707 55.306 68.3929 55.3302 68.5159 55.353C68.5443 55.3582 68.5723 55.3644 68.6009 55.3696C68.7497 55.3959 68.9004 55.4195 69.0517 55.4407C69.1054 55.4479 69.1597 55.454 69.2136 55.4606C69.3146 55.4733 69.4161 55.4856 69.5182 55.496C69.5815 55.502 69.6451 55.5074 69.7089 55.5127C69.8042 55.5208 69.8997 55.5279 69.996 55.5338C70.062 55.5378 70.1282 55.5413 70.1947 55.5442C70.2923 55.5486 70.3906 55.5516 70.4893 55.5537C70.5537 55.5549 70.6182 55.5566 70.6833 55.5568C70.7958 55.5575 70.9093 55.5559 71.0231 55.5535C71.0748 55.5524 71.1257 55.5525 71.1778 55.5508C71.3407 55.5456 71.505 55.5369 71.6708 55.5252C71.7224 55.5219 71.7747 55.5161 71.8267 55.5119C71.945 55.5023 72.0636 55.4919 72.1834 55.4789C72.2516 55.4715 72.3207 55.4626 72.3897 55.4541C72.4954 55.4414 72.6014 55.4276 72.7084 55.412C72.7815 55.4013 72.8551 55.3898 72.9289 55.3782C73.0347 55.361 73.1416 55.3427 73.2488 55.3231C73.3224 55.3096 73.3959 55.2963 73.4699 55.2817C73.5853 55.2589 73.7017 55.2339 73.8181 55.2083C73.885 55.1934 73.9509 55.1798 74.0181 55.1643C74.196 55.1226 74.3756 55.0783 74.5568 55.0296C74.5596 55.0292 74.5622 55.0286 74.5648 55.028L74.5647 55.0277C75.5783 54.7563 76.6459 54.3755 77.7768 53.871C87.937 48.6912 85.6074 33.0097 84.7531 29.9067ZM24.782 46.9669C22.9832 49.8382 20.2489 53.0702 17.0761 53.0185C11.3839 52.926 9.32972 47.2986 9.21311 38.946C9.18762 37.1228 9.32222 35.0594 9.62674 32.9148C9.63133 32.8827 9.63622 32.8503 9.64097 32.8179C9.65639 32.711 9.67212 32.604 9.68839 32.4967C9.69635 32.4437 9.70466 32.3909 9.7128 32.338C9.72666 32.2489 9.74092 32.1596 9.75534 32.0704C9.76398 32.0157 9.773 31.961 9.78202 31.9063C9.79786 31.809 9.81456 31.7114 9.83133 31.614C9.83894 31.5705 9.84602 31.527 9.85382 31.4832C9.87756 31.3476 9.90213 31.2114 9.9271 31.0754C9.9357 31.0292 9.94461 30.9827 9.9534 30.9366C9.97129 30.841 9.98938 30.7454 10.008 30.6498C10.0188 30.5946 10.0296 30.5394 10.0406 30.4841C10.0587 30.3931 10.0771 30.3018 10.0958 30.2108C10.1064 30.1587 10.1171 30.1068 10.1279 30.0548C10.1538 29.9305 10.1804 29.8063 10.2074 29.6821C10.2137 29.6534 10.2198 29.6249 10.2261 29.5966C10.2538 29.4702 10.2824 29.3439 10.3113 29.2178C10.3229 29.1664 10.335 29.1154 10.3468 29.0641C10.3683 28.972 10.3901 28.8795 10.4123 28.7871C10.4253 28.733 10.4384 28.6786 10.4518 28.6244C10.4754 28.5275 10.4995 28.4308 10.5239 28.3338C10.5352 28.2888 10.5463 28.2435 10.5578 28.1986C10.5928 28.0609 10.6287 27.9235 10.6652 27.7865C10.6754 27.7479 10.6861 27.7093 10.6965 27.671C10.7241 27.5682 10.752 27.4654 10.7806 27.363C10.7951 27.3108 10.8098 27.2586 10.8243 27.2067C10.8504 27.1143 10.8767 27.0224 10.9034 26.9305C10.9181 26.88 10.9327 26.8295 10.9474 26.7791C10.9809 26.6654 11.0147 26.5521 11.0492 26.4389C11.0572 26.4126 11.0649 26.3864 11.0729 26.3605C11.1148 26.2238 11.1575 26.0877 11.2006 25.9517C11.2149 25.9068 11.2298 25.8618 11.2443 25.817C11.2749 25.722 11.3058 25.6273 11.3374 25.5326C11.3538 25.4825 11.3706 25.4326 11.3873 25.3828C11.4196 25.287 11.4521 25.1915 11.4852 25.096C11.5002 25.0532 11.5147 25.0103 11.5297 24.9676C11.5769 24.8331 11.6245 24.699 11.6731 24.5656C11.6829 24.5387 11.693 24.5121 11.703 24.4851C11.7427 24.3768 11.7831 24.2684 11.8238 24.1606C11.8415 24.1138 11.8597 24.0669 11.8776 24.0199C11.9123 23.9294 11.9475 23.8391 11.9829 23.7493C12.0013 23.7027 12.0197 23.6561 12.0383 23.6093C12.0797 23.5056 12.1216 23.4025 12.1642 23.2994C12.1761 23.27 12.1879 23.2407 12.2 23.2116C12.2537 23.0817 12.3086 22.9525 12.3643 22.8239C12.3803 22.7865 12.397 22.7492 12.4133 22.7117C12.4541 22.6183 12.4953 22.5253 12.5368 22.4325C12.557 22.3875 12.5774 22.3424 12.598 22.2973C12.6387 22.208 12.68 22.1187 12.7214 22.0303C12.7401 21.9901 12.7587 21.9499 12.7777 21.91C12.8373 21.7844 12.8973 21.6592 12.9584 21.5353C12.964 21.5241 12.9696 21.5132 12.9752 21.502C13.0313 21.3884 13.0882 21.2756 13.1455 21.1637C13.1662 21.1237 13.1869 21.0843 13.2075 21.0444C13.2515 20.9594 13.2962 20.8747 13.3412 20.7905C13.3635 20.7489 13.386 20.7071 13.4083 20.6656C13.4574 20.575 13.5071 20.4852 13.557 20.3958C13.5741 20.3655 13.5908 20.3347 13.6079 20.3043C13.6743 20.1867 13.7414 20.0704 13.8094 19.9548C13.8261 19.9264 13.8434 19.8983 13.8601 19.8698C13.9126 19.7816 13.9657 19.6937 14.0189 19.6067C14.0428 19.5681 14.0667 19.5298 14.0907 19.4912C14.14 19.4118 14.1899 19.333 14.2402 19.2546C14.2633 19.2187 14.2863 19.1825 14.3097 19.1468C14.3764 19.0444 14.4436 18.9428 14.5116 18.8425C14.5174 18.8338 14.5233 18.8248 14.5291 18.8161C14.6029 18.7078 14.6776 18.601 14.7529 18.495C14.7761 18.4625 14.7996 18.4303 14.8228 18.398C14.8768 18.3233 14.9312 18.2488 14.9861 18.1753C15.0125 18.1399 15.0389 18.1046 15.0655 18.0693C15.1227 17.9939 15.1805 17.9191 15.2387 17.8448C15.2603 17.8172 15.2818 17.7891 15.3036 17.7614C15.3831 17.6617 15.463 17.5631 15.5439 17.4661C15.5595 17.447 15.5756 17.4287 15.5914 17.41C15.6575 17.3314 15.7239 17.2539 15.791 17.1773C15.8185 17.1461 15.846 17.1152 15.8733 17.0843C15.9319 17.0188 15.9907 16.954 16.05 16.8897C16.0776 16.8598 16.1052 16.8299 16.1332 16.8002C16.2045 16.7242 16.2764 16.6494 16.3487 16.5758C16.3632 16.5611 16.3773 16.5461 16.3917 16.5315C16.4783 16.4443 16.5657 16.3589 16.6539 16.2748C16.6788 16.2511 16.7041 16.2278 16.7292 16.2042C16.7939 16.1435 16.8593 16.0831 16.9254 16.0239C16.9559 15.9965 16.9864 15.9691 17.017 15.9422C17.0823 15.8846 17.1484 15.828 17.2145 15.7722C17.2417 15.7493 17.2686 15.726 17.2959 15.7036C17.3882 15.627 17.481 15.5521 17.575 15.4788C17.5867 15.4698 17.5984 15.4613 17.6103 15.4522C17.693 15.3884 17.7768 15.3258 17.861 15.2647C17.8915 15.2423 17.9224 15.2207 17.9534 15.1988C18.0212 15.1506 18.0896 15.1031 18.1584 15.0567C18.1907 15.0348 18.223 15.0129 18.2558 14.9914C18.333 14.9405 18.4112 14.8907 18.4895 14.8421C18.5113 14.8285 18.5327 14.8144 18.5546 14.8012C18.6544 14.7404 18.7549 14.6815 18.8564 14.6243C18.8819 14.6099 18.908 14.5964 18.9337 14.5822C19.0108 14.5396 19.0885 14.4982 19.1665 14.4579C19.2012 14.4401 19.2359 14.4226 19.2706 14.4053C19.3448 14.3684 19.4189 14.3327 19.4939 14.2977C19.5264 14.2827 19.5587 14.2671 19.5913 14.2524C19.6971 14.2046 19.8037 14.1581 19.9111 14.1144C27.4861 11.0361 36.7679 22.6083 36.7679 22.6083C36.443 23.4368 28.2425 41.9043 24.782 46.9669ZM73.4708 46.1311C73.191 46.2185 72.8955 46.2889 72.5832 46.3407C72.5803 46.3414 72.5772 46.3417 72.5743 46.3421C72.4989 46.3545 72.423 46.3662 72.3457 46.3763C72.3337 46.378 72.3212 46.379 72.3092 46.3807C72.2406 46.3894 72.1717 46.3979 72.1016 46.405C72.0758 46.4073 72.0496 46.4091 72.0237 46.4114C71.9664 46.4165 71.9093 46.422 71.8509 46.4262C71.766 46.432 71.6799 46.4367 71.5931 46.44C68.7824 46.2424 65.0077 43.4134 59.478 36.3786C55.6368 31.4475 50.8614 25.7095 47.1413 21.3128C46.2284 20.2534 45.7102 19.6668 45.7102 19.6668C45.7102 19.6668 45.7153 19.6565 45.7226 19.6412C45.8782 19.3216 47.6241 15.7651 50.0676 12.2895C55.3466 4.78064 62.556 8.24983 64.3796 9.24448C67.6561 11.0318 70.7405 15.2606 73.171 20.192C74.5234 22.9368 76.6883 28.0988 77.6102 35.6069C78.1743 40.2016 77.4323 44.8917 73.4708 46.1311Z"
      fill="#B5B5B5"
    />
  </svg>
)

const linkedin = (
  <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32" fill="none">
    <g clip-path="url(#clip0_620_4460)">
      <path
        d="M31.9936 31.9956L32.0016 31.9942V20.2582C32.0016 14.5169 30.7656 10.0942 24.0536 10.0942C20.827 10.0942 18.6616 11.8649 17.7776 13.5436H17.6843V10.6302H11.3203V31.9942H17.947V21.4156C17.947 18.6302 18.475 15.9369 21.9243 15.9369C25.323 15.9369 25.3736 19.1156 25.3736 21.5942V31.9956H31.9936Z"
        fill="#B5B5B5"
      />
      <path d="M0.527344 10.6323H7.16201V31.9963H0.527344V10.6323Z" fill="#B5B5B5" />
      <path
        d="M3.84267 -0.00292969C1.72133 -0.00292969 0 1.7184 0 3.83974C0 5.96107 1.72133 7.7184 3.84267 7.7184C5.964 7.7184 7.68533 5.96107 7.68533 3.83974C7.684 1.7184 5.96267 -0.00292969 3.84267 -0.00292969Z"
        fill="#B5B5B5"
      />
    </g>
    <defs>
      <clipPath id="clip0_620_4460">
        <rect width="32" height="32" fill="white" transform="translate(0 -0.00292969)" />
      </clipPath>
    </defs>
  </svg>
)

const googleAds = (
  <svg xmlns="http://www.w3.org/2000/svg" width="78" height="74" viewBox="0 0 78 74" fill="none">
    <path
      d="M5.70591 43.2729C4.5313 44.6094 3.66941 46.2015 3.18686 47.9261C2.70432 49.6508 2.61406 51.4617 2.92306 53.2189C3.23206 54.9761 3.93204 56.6325 4.96889 58.06C6.00573 59.4875 7.35165 60.6479 8.90257 61.4514C10.4535 62.2549 12.1679 62.68 13.9131 62.6939C15.6584 62.7078 17.3878 62.31 18.9676 61.5314C20.5474 60.7528 21.9353 59.6142 23.0239 58.2035C24.1126 56.7929 24.8728 55.1482 25.2458 53.3964C25.7815 50.8809 25.494 48.2637 24.4278 45.9508C23.3617 43.6379 21.5766 41.7587 19.3495 40.6049C17.1225 39.4511 14.5781 39.0872 12.1111 39.5696C9.64411 40.052 7.39258 41.3538 5.70591 43.2729Z"
      fill="#B5B5B5"
    />
    <path
      d="M28.714 17.1187L11.468 36.7365C13.6369 36.2892 15.872 36.3642 17.9966 36.9555C20.1212 37.5469 22.077 38.6384 23.7092 40.1437C25.3414 41.649 26.6052 43.5268 27.4007 45.6285C28.1962 47.7302 28.5015 49.9982 28.2925 52.253L35.8057 43.7007C29.3669 23.1381 28.2389 21.0625 28.714 17.1187Z"
      fill="#B5B5B5"
    />
    <path
      d="M66.674 56.2325C66.2261 54.8537 53.6157 14.248 53.3249 13.634C52.1614 10.8812 49.9992 8.70807 47.2908 7.5693C44.5824 6.43053 41.5377 6.4144 38.7939 7.52429C36.0501 8.63418 33.8199 10.7841 32.5701 13.524C31.3202 16.2639 31.1476 19.3816 32.0883 22.2244C31.9493 22.1949 31.6543 20.8486 44.979 63.5614C45.433 65.0162 46.1631 66.3619 47.1277 67.5218C48.0922 68.6817 49.2723 69.633 50.6006 70.3214C51.9289 71.0099 53.3793 71.4219 54.8691 71.534C56.3589 71.6462 57.8589 71.4562 59.2834 70.975C60.7079 70.4938 62.0291 69.7307 63.1714 68.7294C64.3138 67.7281 65.2549 66.5081 65.9412 65.1392C66.6275 63.7702 67.0454 62.279 67.1712 60.7508C67.2969 59.2226 67.128 57.6873 66.674 56.2325Z"
      fill="#B5B5B5"
    />
  </svg>
)

const tiktok = (
  <svg xmlns="http://www.w3.org/2000/svg" width="32" height="38" viewBox="0 0 32 38" fill="none">
    <path
      d="M31.9771 9.86441C31.9454 9.86441 28.7242 9.79987 25.9798 7.75627C23.5851 5.98156 22.7586 2.12022 22.6315 0.689699V0.496094H16.8036V26.0196C16.8036 29.085 14.3454 31.5804 11.3255 31.5804C8.30562 31.5804 5.84735 29.085 5.84735 26.0196C5.84735 22.9542 8.30562 20.4589 11.3255 20.4589H13.1692V14.5432H11.3255C5.09503 14.5432 0.0195312 19.6952 0.0195312 26.0196C0.0195312 32.3441 5.09503 37.4961 11.3255 37.4961C17.556 37.4961 22.6315 32.3441 22.6315 26.0196V12.5964C26.8593 15.6833 31.4368 15.7801 31.9666 15.7801V9.86441H31.9771Z"
      fill="#B5B5B5"
    />
  </svg>
)
